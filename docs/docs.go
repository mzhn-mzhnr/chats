// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "url": "http://github.com/mzhn-mzhnr/chats"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "conversation"
                ],
                "summary": "Получение диалогов пользователя",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ConversationsResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "conversation"
                ],
                "summary": "Создание нового диалога",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateConversationResponse"
                        }
                    }
                }
            }
        },
        "/send": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "conversation"
                ],
                "summary": "Send message",
                "parameters": [
                    {
                        "description": "Данные для отправки",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.SendMessageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.SentMessage"
                        }
                    }
                }
            }
        },
        "/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "conversation"
                ],
                "summary": "Получение диалога по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "conversation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ConversationResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.AnswerMeta": {
            "type": "object",
            "properties": {
                "fileId": {
                    "type": "string"
                },
                "fileName": {
                    "type": "string"
                },
                "slideNum": {
                    "type": "integer"
                }
            }
        },
        "domain.SentMessage": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "string"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.AnswerMeta"
                    }
                }
            }
        },
        "handlers.Conversation": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "handlers.ConversationResponse": {
            "type": "object",
            "properties": {
                "conversation": {
                    "$ref": "#/definitions/handlers.Conversation"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.Message"
                    }
                }
            }
        },
        "handlers.ConversationsResponse": {
            "type": "object",
            "properties": {
                "conversations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.Conversation"
                    }
                }
            }
        },
        "handlers.CreateConversationResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "handlers.Message": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isUser": {
                    "type": "boolean"
                },
                "meta": {
                    "$ref": "#/definitions/handlers.Meta"
                }
            }
        },
        "handlers.Meta": {
            "type": "object",
            "properties": {
                "fileId": {
                    "type": "string"
                },
                "fileName": {
                    "type": "string"
                },
                "slideNum": {
                    "type": "integer"
                }
            }
        },
        "handlers.SendMessageRequest": {
            "type": "object",
            "properties": {
                "conversationId": {
                    "type": "string"
                },
                "input": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.1",
	Host:             "",
	BasePath:         "/conversations/",
	Schemes:          []string{},
	Title:            "MZHN Chat API",
	Description:      "Chat Api Service",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
